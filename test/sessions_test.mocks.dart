// Mocks generated by Mockito 5.4.5 from annotations
// in medrhythms/test/sessions_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:audioplayers/audioplayers.dart' as _i4;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:health/health.dart' as _i7;
import 'package:medrhythms/helpers/datasyncmanager.dart' as _i12;
import 'package:medrhythms/helpers/usersession.dart' as _i10;
import 'package:medrhythms/mypages/createroutes.dart' as _i5;
import 'package:medrhythms/mypages/modifyroutes.dart' as _i3;
import 'package:medrhythms/userappactions/audios.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:uuid/data.dart' as _i13;
import 'package:uuid/uuid.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseModifyStore_1 extends _i1.SmartFake
    implements _i3.FirebaseModifyStore {
  _FakeFirebaseModifyStore_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudioPlayer_2 extends _i1.SmartFake implements _i4.AudioPlayer {
  _FakeAudioPlayer_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCreateDataService_3 extends _i1.SmartFake
    implements _i5.CreateDataService {
  _FakeCreateDataService_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUuidValue_4 extends _i1.SmartFake implements _i6.UuidValue {
  _FakeUuidValue_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Health].
///
/// See the documentation for Mockito's code generation for more information.
class MockHealth extends _i1.Mock implements _i7.Health {
  MockHealth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.HealthConnectSdkStatus get healthConnectSdkStatus =>
      (super.noSuchMethod(
            Invocation.getter(#healthConnectSdkStatus),
            returnValue: _i7.HealthConnectSdkStatus.sdkUnavailable,
          )
          as _i7.HealthConnectSdkStatus);

  @override
  _i7.HealthPlatformType get platformType =>
      (super.noSuchMethod(
            Invocation.getter(#platformType),
            returnValue: _i7.HealthPlatformType.appleHealth,
          )
          as _i7.HealthPlatformType);

  @override
  String get deviceId =>
      (super.noSuchMethod(
            Invocation.getter(#deviceId),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#deviceId),
            ),
          )
          as String);

  @override
  _i9.Future<void> configure() =>
      (super.noSuchMethod(
            Invocation.method(#configure, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  bool isDataTypeAvailable(_i7.HealthDataType? dataType) =>
      (super.noSuchMethod(
            Invocation.method(#isDataTypeAvailable, [dataType]),
            returnValue: false,
          )
          as bool);

  @override
  _i9.Future<bool?> hasPermissions(
    List<_i7.HealthDataType>? types, {
    List<_i7.HealthDataAccess>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #hasPermissions,
              [types],
              {#permissions: permissions},
            ),
            returnValue: _i9.Future<bool?>.value(),
          )
          as _i9.Future<bool?>);

  @override
  _i9.Future<void> revokePermissions() =>
      (super.noSuchMethod(
            Invocation.method(#revokePermissions, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<_i7.HealthConnectSdkStatus?> getHealthConnectSdkStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getHealthConnectSdkStatus, []),
            returnValue: _i9.Future<_i7.HealthConnectSdkStatus?>.value(),
          )
          as _i9.Future<_i7.HealthConnectSdkStatus?>);

  @override
  _i9.Future<bool> isHealthConnectAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isHealthConnectAvailable, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<void> installHealthConnect() =>
      (super.noSuchMethod(
            Invocation.method(#installHealthConnect, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<bool> isHealthDataHistoryAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isHealthDataHistoryAvailable, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> isHealthDataHistoryAuthorized() =>
      (super.noSuchMethod(
            Invocation.method(#isHealthDataHistoryAuthorized, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> requestHealthDataHistoryAuthorization() =>
      (super.noSuchMethod(
            Invocation.method(#requestHealthDataHistoryAuthorization, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> requestAuthorization(
    List<_i7.HealthDataType>? types, {
    List<_i7.HealthDataAccess>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestAuthorization,
              [types],
              {#permissions: permissions},
            ),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeHealthData({
    required double? value,
    _i7.HealthDataUnit? unit,
    required _i7.HealthDataType? type,
    required DateTime? startTime,
    DateTime? endTime,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeHealthData, [], {
              #value: value,
              #unit: unit,
              #type: type,
              #startTime: startTime,
              #endTime: endTime,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> delete({
    required _i7.HealthDataType? type,
    required DateTime? startTime,
    DateTime? endTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #type: type,
              #startTime: startTime,
              #endTime: endTime,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> deleteByUUID({
    required String? uuid,
    _i7.HealthDataType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteByUUID, [], {#uuid: uuid, #type: type}),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeBloodPressure({
    required int? systolic,
    required int? diastolic,
    required DateTime? startTime,
    DateTime? endTime,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeBloodPressure, [], {
              #systolic: systolic,
              #diastolic: diastolic,
              #startTime: startTime,
              #endTime: endTime,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeBloodOxygen({
    required double? saturation,
    required DateTime? startTime,
    DateTime? endTime,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeBloodOxygen, [], {
              #saturation: saturation,
              #startTime: startTime,
              #endTime: endTime,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeMeal({
    required _i7.MealType? mealType,
    required DateTime? startTime,
    required DateTime? endTime,
    double? caloriesConsumed,
    double? carbohydrates,
    double? protein,
    double? fatTotal,
    String? name,
    double? caffeine,
    double? vitaminA,
    double? b1Thiamin,
    double? b2Riboflavin,
    double? b3Niacin,
    double? b5PantothenicAcid,
    double? b6Pyridoxine,
    double? b7Biotin,
    double? b9Folate,
    double? b12Cobalamin,
    double? vitaminC,
    double? vitaminD,
    double? vitaminE,
    double? vitaminK,
    double? calcium,
    double? cholesterol,
    double? chloride,
    double? chromium,
    double? copper,
    double? fatUnsaturated,
    double? fatMonounsaturated,
    double? fatPolyunsaturated,
    double? fatSaturated,
    double? fatTransMonoenoic,
    double? fiber,
    double? iodine,
    double? iron,
    double? magnesium,
    double? manganese,
    double? molybdenum,
    double? phosphorus,
    double? potassium,
    double? selenium,
    double? sodium,
    double? sugar,
    double? water,
    double? zinc,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeMeal, [], {
              #mealType: mealType,
              #startTime: startTime,
              #endTime: endTime,
              #caloriesConsumed: caloriesConsumed,
              #carbohydrates: carbohydrates,
              #protein: protein,
              #fatTotal: fatTotal,
              #name: name,
              #caffeine: caffeine,
              #vitaminA: vitaminA,
              #b1Thiamin: b1Thiamin,
              #b2Riboflavin: b2Riboflavin,
              #b3Niacin: b3Niacin,
              #b5PantothenicAcid: b5PantothenicAcid,
              #b6Pyridoxine: b6Pyridoxine,
              #b7Biotin: b7Biotin,
              #b9Folate: b9Folate,
              #b12Cobalamin: b12Cobalamin,
              #vitaminC: vitaminC,
              #vitaminD: vitaminD,
              #vitaminE: vitaminE,
              #vitaminK: vitaminK,
              #calcium: calcium,
              #cholesterol: cholesterol,
              #chloride: chloride,
              #chromium: chromium,
              #copper: copper,
              #fatUnsaturated: fatUnsaturated,
              #fatMonounsaturated: fatMonounsaturated,
              #fatPolyunsaturated: fatPolyunsaturated,
              #fatSaturated: fatSaturated,
              #fatTransMonoenoic: fatTransMonoenoic,
              #fiber: fiber,
              #iodine: iodine,
              #iron: iron,
              #magnesium: magnesium,
              #manganese: manganese,
              #molybdenum: molybdenum,
              #phosphorus: phosphorus,
              #potassium: potassium,
              #selenium: selenium,
              #sodium: sodium,
              #sugar: sugar,
              #water: water,
              #zinc: zinc,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeMenstruationFlow({
    required _i7.MenstrualFlow? flow,
    required DateTime? startTime,
    required DateTime? endTime,
    required bool? isStartOfCycle,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeMenstruationFlow, [], {
              #flow: flow,
              #startTime: startTime,
              #endTime: endTime,
              #isStartOfCycle: isStartOfCycle,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeAudiogram({
    required List<double>? frequencies,
    required List<double>? leftEarSensitivities,
    required List<double>? rightEarSensitivities,
    required DateTime? startTime,
    DateTime? endTime,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeAudiogram, [], {
              #frequencies: frequencies,
              #leftEarSensitivities: leftEarSensitivities,
              #rightEarSensitivities: rightEarSensitivities,
              #startTime: startTime,
              #endTime: endTime,
              #metadata: metadata,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> writeInsulinDelivery(
    double? units,
    _i7.InsulinDeliveryReason? reason,
    DateTime? startTime,
    DateTime? endTime,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#writeInsulinDelivery, [
              units,
              reason,
              startTime,
              endTime,
            ]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<List<_i7.HealthDataPoint>> getHealthDataFromTypes({
    required List<_i7.HealthDataType>? types,
    required DateTime? startTime,
    required DateTime? endTime,
    List<_i7.RecordingMethod>? recordingMethodsToFilter = const [],
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHealthDataFromTypes, [], {
              #types: types,
              #startTime: startTime,
              #endTime: endTime,
              #recordingMethodsToFilter: recordingMethodsToFilter,
            }),
            returnValue: _i9.Future<List<_i7.HealthDataPoint>>.value(
              <_i7.HealthDataPoint>[],
            ),
          )
          as _i9.Future<List<_i7.HealthDataPoint>>);

  @override
  _i9.Future<List<_i7.HealthDataPoint>> getHealthIntervalDataFromTypes({
    required DateTime? startDate,
    required DateTime? endDate,
    required List<_i7.HealthDataType>? types,
    required int? interval,
    List<_i7.RecordingMethod>? recordingMethodsToFilter = const [],
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHealthIntervalDataFromTypes, [], {
              #startDate: startDate,
              #endDate: endDate,
              #types: types,
              #interval: interval,
              #recordingMethodsToFilter: recordingMethodsToFilter,
            }),
            returnValue: _i9.Future<List<_i7.HealthDataPoint>>.value(
              <_i7.HealthDataPoint>[],
            ),
          )
          as _i9.Future<List<_i7.HealthDataPoint>>);

  @override
  _i9.Future<List<_i7.HealthDataPoint>> getHealthAggregateDataFromTypes({
    required List<_i7.HealthDataType>? types,
    required DateTime? startDate,
    required DateTime? endDate,
    int? activitySegmentDuration = 1,
    bool? includeManualEntry = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHealthAggregateDataFromTypes, [], {
              #types: types,
              #startDate: startDate,
              #endDate: endDate,
              #activitySegmentDuration: activitySegmentDuration,
              #includeManualEntry: includeManualEntry,
            }),
            returnValue: _i9.Future<List<_i7.HealthDataPoint>>.value(
              <_i7.HealthDataPoint>[],
            ),
          )
          as _i9.Future<List<_i7.HealthDataPoint>>);

  @override
  List<_i7.HealthDataPoint> removeDuplicates(
    List<_i7.HealthDataPoint>? points,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeDuplicates, [points]),
            returnValue: <_i7.HealthDataPoint>[],
          )
          as List<_i7.HealthDataPoint>);

  @override
  _i9.Future<int?> getTotalStepsInInterval(
    DateTime? startTime,
    DateTime? endTime, {
    bool? includeManualEntry = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getTotalStepsInInterval,
              [startTime, endTime],
              {#includeManualEntry: includeManualEntry},
            ),
            returnValue: _i9.Future<int?>.value(),
          )
          as _i9.Future<int?>);

  @override
  _i9.Future<bool> writeWorkoutData({
    required _i7.HealthWorkoutActivityType? activityType,
    required DateTime? start,
    required DateTime? end,
    int? totalEnergyBurned,
    _i7.HealthDataUnit? totalEnergyBurnedUnit = _i7.HealthDataUnit.KILOCALORIE,
    int? totalDistance,
    _i7.HealthDataUnit? totalDistanceUnit = _i7.HealthDataUnit.METER,
    String? title,
    _i7.RecordingMethod? recordingMethod = _i7.RecordingMethod.automatic,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#writeWorkoutData, [], {
              #activityType: activityType,
              #start: start,
              #end: end,
              #totalEnergyBurned: totalEnergyBurned,
              #totalEnergyBurnedUnit: totalEnergyBurnedUnit,
              #totalDistance: totalDistance,
              #totalDistanceUnit: totalDistanceUnit,
              #title: title,
              #recordingMethod: recordingMethod,
            }),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);
}

/// A class which mocks [UserSession].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSession extends _i1.Mock implements _i10.UserSession {
  MockUserSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set userId(String? _userId) => super.noSuchMethod(
    Invocation.setter(#userId, _userId),
    returnValueForMissingStub: null,
  );

  @override
  set userData(Map<String, dynamic>? _userData) => super.noSuchMethod(
    Invocation.setter(#userData, _userData),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasPermissions =>
      (super.noSuchMethod(
            Invocation.getter(#hasPermissions),
            returnValue: false,
          )
          as bool);

  @override
  set hasPermissions(bool? _hasPermissions) => super.noSuchMethod(
    Invocation.setter(#hasPermissions, _hasPermissions),
    returnValueForMissingStub: null,
  );

  @override
  void loadPermissions() => super.noSuchMethod(
    Invocation.method(#loadPermissions, []),
    returnValueForMissingStub: null,
  );

  @override
  void savePermissions(bool? status) => super.noSuchMethod(
    Invocation.method(#savePermissions, [status]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [CreateDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateDataService extends _i1.Mock implements _i5.CreateDataService {
  MockCreateDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get usersColl =>
      (super.noSuchMethod(
            Invocation.getter(#usersColl),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#usersColl),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  set usersColl(_i2.CollectionReference<Object?>? _usersColl) =>
      super.noSuchMethod(
        Invocation.setter(#usersColl, _usersColl),
        returnValueForMissingStub: null,
      );

  @override
  _i2.CollectionReference<Object?> get sessionColl =>
      (super.noSuchMethod(
            Invocation.getter(#sessionColl),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#sessionColl),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  set sessionColl(_i2.CollectionReference<Object?>? _sessionColl) =>
      super.noSuchMethod(
        Invocation.setter(#sessionColl, _sessionColl),
        returnValueForMissingStub: null,
      );

  @override
  _i3.FirebaseModifyStore get mu =>
      (super.noSuchMethod(
            Invocation.getter(#mu),
            returnValue: _FakeFirebaseModifyStore_1(
              this,
              Invocation.getter(#mu),
            ),
          )
          as _i3.FirebaseModifyStore);

  @override
  set mu(_i3.FirebaseModifyStore? _mu) => super.noSuchMethod(
    Invocation.setter(#mu, _mu),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<void> createUserReference(String? imeiValue) =>
      (super.noSuchMethod(
            Invocation.method(#createUserReference, [imeiValue]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> createSessionData(
    String? userId,
    DateTime? startTime,
    DateTime? endTime,
    double? steps,
    double? distance,
    double? calories,
    double? speed,
    String? source,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createSessionData, [
              userId,
              startTime,
              endTime,
              steps,
              distance,
              calories,
              speed,
              source,
            ]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [LocalAudioManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAudioManager extends _i1.Mock implements _i11.LocalAudioManager {
  MockLocalAudioManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get songs =>
      (super.noSuchMethod(Invocation.getter(#songs), returnValue: <String>[])
          as List<String>);

  @override
  List<String> get playedHistory =>
      (super.noSuchMethod(
            Invocation.getter(#playedHistory),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  double get threshold =>
      (super.noSuchMethod(Invocation.getter(#threshold), returnValue: 0.0)
          as double);

  @override
  _i4.AudioPlayer get audioPlayer =>
      (super.noSuchMethod(
            Invocation.getter(#audioPlayer),
            returnValue: _FakeAudioPlayer_2(
              this,
              Invocation.getter(#audioPlayer),
            ),
          )
          as _i4.AudioPlayer);

  @override
  _i9.Future<void> playSong(String? songPath) =>
      (super.noSuchMethod(
            Invocation.method(#playSong, [songPath]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  double idealBpmForSong(String? song) =>
      (super.noSuchMethod(
            Invocation.method(#idealBpmForSong, [song]),
            returnValue: 0.0,
          )
          as double);

  @override
  String selectSongForBpm(double? bpm) =>
      (super.noSuchMethod(
            Invocation.method(#selectSongForBpm, [bpm]),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#selectSongForBpm, [bpm]),
            ),
          )
          as String);

  @override
  _i9.Future<void> playSongForBpm(double? bpm) =>
      (super.noSuchMethod(
            Invocation.method(#playSongForBpm, [bpm]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [DataSyncManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataSyncManager extends _i1.Mock implements _i12.DataSyncManager {
  MockDataSyncManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.CreateDataService get csd =>
      (super.noSuchMethod(
            Invocation.getter(#csd),
            returnValue: _FakeCreateDataService_3(
              this,
              Invocation.getter(#csd),
            ),
          )
          as _i5.CreateDataService);

  @override
  _i9.Future<void> store({
    required String? userId,
    required DateTime? startTime,
    required DateTime? endTime,
    required double? steps,
    required double? distance,
    required double? calories,
    required double? speed,
    required String? source,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#store, [], {
              #userId: userId,
              #startTime: startTime,
              #endTime: endTime,
              #steps: steps,
              #distance: distance,
              #calories: calories,
              #speed: speed,
              #source: source,
            }),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> upload() =>
      (super.noSuchMethod(
            Invocation.method(#upload, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> removeStore() =>
      (super.noSuchMethod(
            Invocation.method(#removeStore, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [Uuid].
///
/// See the documentation for Mockito's code generation for more information.
class MockUuid extends _i1.Mock implements _i6.Uuid {
  MockUuid() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String v1({Map<String, dynamic>? options, _i13.V1Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v1, [], {#options: options, #config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v1, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v1buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V1Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v1buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v1obj({
    Map<String, dynamic>? options,
    _i13.V1Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v1obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v1obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i6.UuidValue);

  @override
  String v4({Map<String, dynamic>? options, _i13.V4Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v4, [], {#options: options, #config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v4, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v4buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V4Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v4buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v4obj({
    Map<String, dynamic>? options,
    _i13.V4Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v4obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v4obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i6.UuidValue);

  @override
  String v5(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(
                #v5,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as String);

  @override
  List<int> v5buffer(
    String? namespace,
    String? name,
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5buffer,
              [namespace, name, buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v5obj(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5obj,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(
                #v5obj,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as _i6.UuidValue);

  @override
  String v6({_i13.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v6, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v6buffer(
    List<int>? buffer, {
    _i13.V6Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v6buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v6obj({_i13.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6obj, [], {#config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v6obj, [], {#config: config}),
            ),
          )
          as _i6.UuidValue);

  @override
  String v7({_i13.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v7, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v7buffer(
    List<int>? buffer, {
    _i13.V7Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v7buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v7obj({_i13.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7obj, [], {#config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v7obj, [], {#config: config}),
            ),
          )
          as _i6.UuidValue);

  @override
  String v8({_i13.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v8, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8buffer(
    List<int>? buffer, {
    _i13.V8Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v8obj({_i13.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8obj, [], {#config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v8obj, [], {#config: config}),
            ),
          )
          as _i6.UuidValue);

  @override
  String v8g({_i13.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8g, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v8g, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8gbuffer(
    List<int>? buffer, {
    _i13.V8GenericOptions? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8gbuffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i6.UuidValue v8gobj({_i13.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8gobj, [], {#config: config}),
            returnValue: _FakeUuidValue_4(
              this,
              Invocation.method(#v8gobj, [], {#config: config}),
            ),
          )
          as _i6.UuidValue);
}
